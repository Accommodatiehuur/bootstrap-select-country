{"version":3,"file":"bootstrap-select-country.min.js","sources":["../../node_modules/i18n-iso-countries/index.js","../../src/bootstrap-select-country.js"],"sourcesContent":["\"use strict\";\n\nvar codes = require(\"./codes.json\");\nvar registeredLocales = {};\n\n/*\n * All codes map to ISO 3166-1 alpha-2\n */\nvar alpha2 = {},\n  alpha3 = {},\n  numeric = {},\n  invertedNumeric = {};\n\ncodes.forEach(function(codeInformation) {\n  var s = codeInformation;\n  alpha2[s[0]] = s[1];\n  alpha3[s[1]] = s[0];\n  numeric[s[2]] = s[0];\n  invertedNumeric[s[0]] = s[2];\n});\n\nfunction formatNumericCode(code) {\n  return String('000'+(code ? code : '')).slice(-3);\n}\n\nfunction registerLocale(localeData) {\n  if (!localeData.locale) {\n    throw new TypeError('Missing localeData.locale');\n  }\n\n  if (!localeData.countries) {\n    throw new TypeError('Missing localeData.countries');\n  }\n\n  registeredLocales[localeData.locale] = localeData.countries;\n}\n\nexports.registerLocale = registerLocale;\n\n/*\n * @param code Alpha-3 code\n * @return Alpha-2 code or undefined\n */\nfunction alpha3ToAlpha2(code) {\n  return alpha3[code];\n}\nexports.alpha3ToAlpha2 = alpha3ToAlpha2;\n\n/*\n * @param code Alpha-2 code\n * @return Alpha-3 code or undefined\n */\nfunction alpha2ToAlpha3(code) {\n  return alpha2[code];\n}\nexports.alpha2ToAlpha3 = alpha2ToAlpha3;\n\n/*\n * @param code Alpha-3 code\n * @return Numeric code or undefined\n */\nfunction alpha3ToNumeric(code) {\n  return invertedNumeric[alpha3ToAlpha2(code)];\n}\nexports.alpha3ToNumeric = alpha3ToNumeric;\n\n/*\n * @param code Alpha-2 code\n * @return Numeric code or undefined\n */\nfunction alpha2ToNumeric(code) {\n  return invertedNumeric[code];\n}\nexports.alpha2ToNumeric = alpha2ToNumeric;\n\n/*\n * @param code Numeric code\n * @return Alpha-3 code or undefined\n */\nfunction numericToAlpha3(code) {\n  var padded = formatNumericCode(code);\n  return alpha2ToAlpha3(numeric[padded]);\n}\nexports.numericToAlpha3 = numericToAlpha3;\n\n/*\n * @param code Numeric code\n * @return Alpha-2 code or undefined\n */\nfunction numericToAlpha2(code) {\n  var padded = formatNumericCode(code);\n  return numeric[padded];\n}\nexports.numericToAlpha2 = numericToAlpha2;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-3\n */\nfunction toAlpha3(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha3(code);\n    }\n    if(code.length === 2) {\n      return alpha2ToAlpha3(code.toUpperCase());\n    }\n    if (code.length === 3) {\n      return code.toUpperCase();\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha3(code);\n  }\n  return undefined;\n}\nexports.toAlpha3 = toAlpha3;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-2\n */\nfunction toAlpha2(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha2(code);\n    }\n    if (code.length === 2) {\n      return code.toUpperCase();\n    }\n    if(code.length === 3) {\n      return alpha3ToAlpha2(code.toUpperCase());\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha2(code);\n  }\n  return undefined;\n}\nexports.toAlpha2 = toAlpha2;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @param lang language for country name\n * @return name or undefined\n */\nexports.getName = function(code, lang) {\n  try {\n    var d = registeredLocales[lang.toLowerCase()];\n    return d[toAlpha2(code)];\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @param lang language for country names\n * @return Object of country code mapped to county name\n */\nexports.getNames = function(lang) {\n  var d = registeredLocales[lang.toLowerCase()];\n  if (d === undefined) {\n    return {};\n  }\n  return d;\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getAlpha2Code = function(name, lang) {\n  try {\n    var p, codenames = registeredLocales[lang.toLowerCase()];\n    for (p in codenames) {\n      if (codenames.hasOwnProperty(p)) {\n        if (codenames[p].toLowerCase() === name.toLowerCase()) {\n          return p;\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-2 codes mapped to alpha-3 codes\n */\nexports.getAlpha2Codes = function() {\n  return alpha2;\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getAlpha3Code = function(name, lang) {\n  var alpha2 = this.getAlpha2Code(name, lang);\n  if (alpha2) {\n    return this.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-3 codes mapped to alpha-2 codes\n */\nexports.getAlpha3Codes = function() {\n  return alpha3;\n};\n\n/*\n * @return Object of numeric codes mapped to alpha-2 codes\n */\nexports.getNumericCodes = function() {\n  return numeric;\n};\n\n/*\n * @return Array of supported languages\n */\nexports.langs = function() {\n  return Object.keys(registeredLocales);\n};\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return Boolean\n */\nexports.isValid = function(code) {\n  return alpha3.hasOwnProperty(code) || alpha2.hasOwnProperty(code) ||\n    numeric.hasOwnProperty(code);\n};\n","import $ from 'jquery';\r\n\r\nimport countries from \"i18n-iso-countries\";\r\nimport langs_nl from \"i18n-iso-countries/langs/nl.json\";\r\nimport langs_en from \"i18n-iso-countries/langs/en.json\";\r\nimport langs_de from \"i18n-iso-countries/langs/de.json\";\r\n\r\ncountries.registerLocale(langs_nl);\r\ncountries.registerLocale(langs_en);\r\ncountries.registerLocale(langs_de);\r\n\r\nconst languageMappings = {\r\n\t'nl': langs_nl, // Dutch\r\n\t'en': langs_en, // English\r\n\t'de': langs_de, // German\r\n};\r\n\r\n// Mapping country names with their codes\r\nconst countriesList = (locale) => {\r\n\tvar langCountries = countries.getNames(locale);\r\n\tvar countries_sorted = Object.keys(langCountries).map((code) => {\r\n\t\treturn {\r\n\t\t\tname: langCountries[code],\r\n\t\t\tcode: code\r\n\t\t};\r\n\t});\r\n\t// Sorting the countries array by country names\r\n\tcountries_sorted.sort((a, b) => a.name.localeCompare(b.name));\r\n\treturn countries_sorted;\r\n};\r\n\r\nlet countrypicker = function(opts) {\r\n\t$(this).each(function(index, select) {\r\n\t\tvar $select = $(select);\r\n\t\tvar flag = $select.data('flag');\r\n\t\tvar locale = $select.data('locale') || 'nl'; // Default to Dutch if no locale is provided\r\n\r\n\t\tvar countries = countriesList(locale);\r\n\r\n\t\t// filter countries of an option \"data-countries\" exist\"\r\n\t\tvar selectedCountries = $select.data('countries');\r\n\t\tif (selectedCountries && selectedCountries.length) {\r\n\t\t\tselectedCountries = selectedCountries.toUpperCase().split(',');\r\n\t\t\tcountries = countries.filter(c => selectedCountries.includes(c.code));\r\n\t\t}\r\n\r\n\t\tvar options = [];\r\n\t\tif (flag) {\r\n\t\t\t\t/* create option for each existing country */\r\n\t\t\t\t$.each(countries, function (index, country) {\r\n\t\t\t\t\toptions.push(`<option\r\n\t\t\t\t\t\tdata-tokens=\"${country.code} ${country.name}\"\r\n\t\t\t\t\t\tdata-icon=\"inline-flag flag ${country.code.toLowerCase()}\"\r\n\t\t\t\t\t\tclass=\"option-with-flag\"\r\n\t\t\t\t\t\tvalue=\"${country.code}\">${country.name}</option>`);\r\n\t\t\t\t});\r\n\r\n\t\t} else {\r\n\t\t\t//for each build list without flag\r\n\t\t\t$.each(countries, function (index, country) {\r\n\t\t\t\toptions.push(`<option\r\n\t\t\t\t\tdata-countrycode=\"${country.code}\r\n\t\t\t\t\tdata-tokens=\"${country.code} ${country.name}\"\r\n\t\t\t\t\tvalue=\"${country.code}\">${country.name}</option>`);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t$select\r\n\t\t\t.addClass('f16')\r\n\t\t\t.html(options.join('\\n'));\r\n\r\n\t\t//check if default\r\n\t\tvar defaultCountryName = $select.data('default');\r\n\t\t//if there's a default, set it\r\n\t\tif (defaultCountryName) {\r\n\t\t\t$select.val(defaultCountryName.split(',').map((v) => v.trim()));\r\n\t\t}\r\n\t});\r\n};\r\n\r\n/* extend jQuery with the countrypicker function */\r\n$.fn.countrypicker = countrypicker;\r\n\r\n/* initialize all countrypicker by default. This is the default jQuery Behavior. */\r\n$('.countrypicker').countrypicker();\r\n\r\n/* return the countrypicker function for use as a module. */\r\nexport default countrypicker;\r\n"],"names":["registeredLocales","alpha2","alpha3","numeric","invertedNumeric","codes","forEach","codeInformation","s","formatNumericCode","code","String","slice","registerLocale","localeData","locale","TypeError","countries","exports","alpha3ToAlpha2","alpha2ToAlpha3","alpha3ToNumeric","alpha2ToNumeric","numericToAlpha3","padded","numericToAlpha2","toAlpha3","test","length","toUpperCase","undefined","toAlpha2","lang","d","toLowerCase","err","name","p","codenames","hasOwnProperty","getAlpha2Code","Object","keys","langs_nl","langs_en","langs_de","countriesList","langCountries","getNames","countries_sorted","map","sort","a","b","localeCompare","countrypicker","opts","$","each","index","select","$select","flag","data","selectedCountries","split","filter","includes","c","options","country","push","addClass","html","join","defaultCountryName","val","v","trim","fn"],"mappings":"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","x_google_ignoreList":[0]}